<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_matrix_8h" kind="file" language="C++">
    <compoundname>Matrix.h</compoundname>
    <includes local="no">vector</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="0">
        <label>Matrix.h</label>
        <link refid="_matrix_8h"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>vector</label>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <innerclass refid="classmatrix" prot="public">matrix</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="_matrix_8h_1a0a5bae11396599e016616a51625df36f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class type</type>
          </param>
        </templateparamlist>
        <type>type</type>
        <definition>type operator^</definition>
        <argsstring>(type A, type B)</argsstring>
        <name>operator^</name>
        <param>
          <type>type</type>
          <declname>A</declname>
        </param>
        <param>
          <type>type</type>
          <declname>B</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Matrix.h" line="147" column="1" bodyfile="Matrix.h" bodystart="147" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="_matrix_8h_1a53ec6d8c397f876ebbc6335f39f63c89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class type</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmatrix" kindref="compound">matrix</ref>&lt; type &gt;</type>
        <definition>matrix&lt;type&gt; operator+</definition>
        <argsstring>(matrix&lt; type &gt; A, matrix&lt; type &gt; B)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="classmatrix" kindref="compound">matrix</ref>&lt; type &gt;</type>
          <declname>A</declname>
        </param>
        <param>
          <type><ref refid="classmatrix" kindref="compound">matrix</ref>&lt; type &gt;</type>
          <declname>B</declname>
        </param>
        <briefdescription>
<para>矩阵加法 </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>A</parametername>
<parametername>B</parametername>
</parameternamelist>
<parameterdescription>
<para>两个被操作的矩阵 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>返回说明 错误时抛出异常0x41 返回它们的和 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Matrix.h" line="168" column="1" bodyfile="Matrix.h" bodystart="168" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="_matrix_8h_1a1ec6549dcdc25def26588bd7e4641696" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class type</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmatrix" kindref="compound">matrix</ref>&lt; type &gt;</type>
        <definition>matrix&lt;type&gt; operator-</definition>
        <argsstring>(matrix&lt; type &gt; A, matrix&lt; type &gt; B)</argsstring>
        <name>operator-</name>
        <param>
          <type><ref refid="classmatrix" kindref="compound">matrix</ref>&lt; type &gt;</type>
          <declname>A</declname>
        </param>
        <param>
          <type><ref refid="classmatrix" kindref="compound">matrix</ref>&lt; type &gt;</type>
          <declname>B</declname>
        </param>
        <briefdescription>
<para>矩阵减法 </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>A</parametername>
<parametername>B</parametername>
</parameternamelist>
<parameterdescription>
<para>两个被操作的矩阵 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>返回说明 错误时抛出异常0x42 返回它们的差 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Matrix.h" line="195" column="1" bodyfile="Matrix.h" bodystart="195" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="_matrix_8h_1ac6bd1764f6e4dc3baddfd661c05eec10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class type</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmatrix" kindref="compound">matrix</ref>&lt; type &gt;</type>
        <definition>matrix&lt;type&gt; operator*</definition>
        <argsstring>(matrix&lt; type &gt; A, matrix&lt; type &gt; B)</argsstring>
        <name>operator*</name>
        <param>
          <type><ref refid="classmatrix" kindref="compound">matrix</ref>&lt; type &gt;</type>
          <declname>A</declname>
        </param>
        <param>
          <type><ref refid="classmatrix" kindref="compound">matrix</ref>&lt; type &gt;</type>
          <declname>B</declname>
        </param>
        <briefdescription>
<para>矩阵乘法 </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>A</parametername>
<parametername>B</parametername>
</parameternamelist>
<parameterdescription>
<para>两个被操作的矩阵 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>返回说明 错误时抛出异常0x43 返回它们的积 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Matrix.h" line="222" column="1" bodyfile="Matrix.h" bodystart="222" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="_matrix_8h_1a7f4a00ac4822503ff1405aae8d808e05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class type</type>
          </param>
          <param>
            <type>class p</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmatrix" kindref="compound">matrix</ref>&lt; type &gt;</type>
        <definition>matrix&lt;type&gt; operator^</definition>
        <argsstring>(matrix&lt; type &gt; A, p B)</argsstring>
        <name>operator^</name>
        <param>
          <type><ref refid="classmatrix" kindref="compound">matrix</ref>&lt; type &gt;</type>
          <declname>A</declname>
        </param>
        <param>
          <type>p</type>
          <declname>B</declname>
        </param>
        <briefdescription>
<para>矩阵快速幂 </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>A</parametername>
</parameternamelist>
<parameterdescription>
<para>被操作的矩阵 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B</parametername>
</parameternamelist>
<parameterdescription>
<para>指数 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>返回说明 返回它们的积 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Matrix.h" line="244" column="1" bodyfile="Matrix.h" bodystart="244" bodyend="260"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*****************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/><sp/>@file<sp/><sp/><sp/><sp/><sp/>Matrix.h<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*<sp/><sp/>@brief<sp/><sp/><sp/><sp/>矩阵类的丑陋实现<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/><sp/>Details.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*<sp/><sp/>@author<sp/><sp/><sp/>Mike<sp/>Liu<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/><sp/>@email<sp/><sp/><sp/><sp/>mike_server@foxmail.com<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*<sp/><sp/>@version<sp/><sp/>1.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/><sp/>@date<sp/><sp/><sp/><sp/><sp/>2018.8.31<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*<sp/><sp/>@license<sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>(GPL)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*----------------------------------------------------------------------------*</highlight></codeline>
<codeline lineno="14"><highlight class="comment">*<sp/><sp/>Remark<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*----------------------------------------------------------------------------*</highlight></codeline>
<codeline lineno="16"><highlight class="comment">*<sp/><sp/>Change<sp/>History<sp/>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*<sp/><sp/>&lt;Date&gt;<sp/><sp/><sp/><sp/><sp/>|<sp/>&lt;Version&gt;<sp/>|<sp/>&lt;Author&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>&lt;Description&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment">*----------------------------------------------------------------------------*</highlight></codeline>
<codeline lineno="19"><highlight class="comment">*<sp/><sp/>2018/08/31<sp/>|<sp/>1.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>Mike<sp/>Liu<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>完成矩阵基本操作（除了转置）<sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment">*----------------------------------------------------------------------------*</highlight></codeline>
<codeline lineno="21"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment">*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_GLIBCXX_VECTOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_LIBLHY_MATRIX_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_LIBLHY_MATRIX_<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>type&gt;</highlight></codeline>
<codeline lineno="33" refid="classmatrix" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmatrix" kindref="compound">matrix</ref></highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Y;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;<sp/>vector&lt;<sp/>type<sp/>&gt;<sp/>&gt;<sp/>mat;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="43" refid="classmatrix_1a047ea31ba5316a00c80d2db118433d6c" refkind="member"><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classmatrix_1a047ea31ba5316a00c80d2db118433d6c" kindref="member">ModValue</ref>;</highlight></codeline>
<codeline lineno="47" refid="classmatrix_1a1536b75646af71d28be7247a3f0ee16f" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmatrix_1a1536b75646af71d28be7247a3f0ee16f" kindref="member">PrintFormat</ref>()</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_GLIBCXX_IOSTREAM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;X;<sp/>i++)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;Y;<sp/>j++)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j!=Y?std::cout&lt;&lt;mat[i][j]&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">:std::cout&lt;&lt;mat[i][j];</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66" refid="classmatrix_1a7f2bec444e35753d7225daf48e04e677" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmatrix_1a7f2bec444e35753d7225daf48e04e677" kindref="member">PutArray</ref>(type<sp/>**Array,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Row,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Column)</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;Row;<sp/>i++)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;Column;<sp/>j++)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat[i][j]=*((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)Array<sp/>+<sp/>Column*i<sp/>+<sp/>j);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81" refid="classmatrix_1a0650c9aa35a3a11b3cf155ce674dddac" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmatrix_1a0650c9aa35a3a11b3cf155ce674dddac" kindref="member">size</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;X<sp/>*this-&gt;Y;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91" refid="classmatrix_1a483f7ab8c7d5aa28495fb5d9a02d369d" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmatrix_1a483f7ab8c7d5aa28495fb5d9a02d369d" kindref="member">PutElement</ref>(type<sp/>Data,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Row,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Column)</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>mat[Row][Column]=Data;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104" refid="classmatrix_1a24b3678b5a1b638006fc8fe0fd9cc457" refkind="member"><highlight class="normal">type<sp/><ref refid="classmatrix_1a24b3678b5a1b638006fc8fe0fd9cc457" kindref="member">GetElement</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Row,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Column)</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((Row&gt;=X||Column&gt;=Y)||(Row&lt;0||Column&lt;0))</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>0x40;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mat[Row][Column];</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116" refid="classmatrix_1a1db0593aa62235f24143913564382990" refkind="member"><highlight class="normal">type<sp/><ref refid="classmatrix_1a1db0593aa62235f24143913564382990" kindref="member">GetRowLength</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>X;</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126" refid="classmatrix_1aee9fe31d5065ec906cd0ed908cc127a1" refkind="member"><highlight class="normal">type<sp/><ref refid="classmatrix_1aee9fe31d5065ec906cd0ed908cc127a1" kindref="member">GetColumnLength</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Y;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136" refid="classmatrix_1a2d0efaa46454804fcf45fae271002cf5" refkind="member"><highlight class="normal"><ref refid="classmatrix_1a2d0efaa46454804fcf45fae271002cf5" kindref="member">matrix</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Row,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Column)</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>mat.resize(Row);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;Row;<sp/>i++)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat[i].resize(Column);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>X=Row;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>Y=Column;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal">};</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>type&gt;</highlight></codeline>
<codeline lineno="147"><highlight class="normal">type<sp/>operator^(type<sp/>A,<sp/>type<sp/>B)</highlight></codeline>
<codeline lineno="148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ans<sp/>=<sp/>1,<sp/>Base<sp/>=<sp/>A;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(B<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(B<sp/>&amp;<sp/>1)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ans<sp/>*=<sp/>Base;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Base<sp/>*=<sp/>Base;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B<sp/>&gt;&gt;=<sp/>1;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Ans;</highlight></codeline>
<codeline lineno="158"><highlight class="normal">};</highlight></codeline>
<codeline lineno="167"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>type&gt;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><ref refid="classmatrix" kindref="compound">matrix&lt;type&gt;</ref><sp/>operator+<sp/>(<ref refid="classmatrix" kindref="compound">matrix&lt;type&gt;</ref><sp/>A,<ref refid="classmatrix" kindref="compound">matrix&lt;type&gt;</ref><sp/>B)</highlight></codeline>
<codeline lineno="169"><highlight class="normal">{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmatrix" kindref="compound">matrix&lt;type&gt;</ref><sp/>C(A.<ref refid="classmatrix_1a1db0593aa62235f24143913564382990" kindref="member">GetRowLength</ref>(),A.<ref refid="classmatrix_1aee9fe31d5065ec906cd0ed908cc127a1" kindref="member">GetColumnLength</ref>());</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(A.<ref refid="classmatrix_1aee9fe31d5065ec906cd0ed908cc127a1" kindref="member">GetColumnLength</ref>()==B.<ref refid="classmatrix_1aee9fe31d5065ec906cd0ed908cc127a1" kindref="member">GetColumnLength</ref>()&amp;&amp;A.<ref refid="classmatrix_1a1db0593aa62235f24143913564382990" kindref="member">GetRowLength</ref>()==B.<ref refid="classmatrix_1a1db0593aa62235f24143913564382990" kindref="member">GetRowLength</ref>())</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;A.<ref refid="classmatrix_1aee9fe31d5065ec906cd0ed908cc127a1" kindref="member">GetColumnLength</ref>()<sp/>;<sp/>i++)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;A.<ref refid="classmatrix_1aee9fe31d5065ec906cd0ed908cc127a1" kindref="member">GetColumnLength</ref>()<sp/>;<sp/>j++)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C.<ref refid="classmatrix_1a483f7ab8c7d5aa28495fb5d9a02d369d" kindref="member">PutElement</ref>(A.<ref refid="classmatrix_1a24b3678b5a1b638006fc8fe0fd9cc457" kindref="member">GetElement</ref>(i,j)+B.<ref refid="classmatrix_1a24b3678b5a1b638006fc8fe0fd9cc457" kindref="member">GetElement</ref>(i,j),i,j);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>C;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;std::endl&lt;&lt;</highlight><highlight class="stringliteral">&quot;Error<sp/>:<sp/>The<sp/>matrix<sp/>being<sp/>manipulated<sp/>is<sp/>not<sp/>a<sp/>matrix<sp/>of<sp/>the<sp/>same<sp/>type.&quot;</highlight><highlight class="normal">&lt;&lt;std::endl&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>0x41;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>type&gt;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><ref refid="classmatrix" kindref="compound">matrix&lt;type&gt;</ref><sp/>operator-<sp/>(<ref refid="classmatrix" kindref="compound">matrix&lt;type&gt;</ref><sp/>A,<ref refid="classmatrix" kindref="compound">matrix&lt;type&gt;</ref><sp/>B)</highlight></codeline>
<codeline lineno="196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmatrix" kindref="compound">matrix&lt;type&gt;</ref><sp/>C(A.<ref refid="classmatrix_1a1db0593aa62235f24143913564382990" kindref="member">GetRowLength</ref>(),A.<ref refid="classmatrix_1aee9fe31d5065ec906cd0ed908cc127a1" kindref="member">GetColumnLength</ref>());</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(A.<ref refid="classmatrix_1aee9fe31d5065ec906cd0ed908cc127a1" kindref="member">GetColumnLength</ref>()==B.<ref refid="classmatrix_1aee9fe31d5065ec906cd0ed908cc127a1" kindref="member">GetColumnLength</ref>()&amp;&amp;A.<ref refid="classmatrix_1a1db0593aa62235f24143913564382990" kindref="member">GetRowLength</ref>()==B.<ref refid="classmatrix_1a1db0593aa62235f24143913564382990" kindref="member">GetRowLength</ref>())</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;A.<ref refid="classmatrix_1aee9fe31d5065ec906cd0ed908cc127a1" kindref="member">GetColumnLength</ref>()<sp/>;<sp/>i++)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;A.<ref refid="classmatrix_1aee9fe31d5065ec906cd0ed908cc127a1" kindref="member">GetColumnLength</ref>()<sp/>;<sp/>j++)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C.<ref refid="classmatrix_1a483f7ab8c7d5aa28495fb5d9a02d369d" kindref="member">PutElement</ref>(A.<ref refid="classmatrix_1a24b3678b5a1b638006fc8fe0fd9cc457" kindref="member">GetElement</ref>(i,j)-B.<ref refid="classmatrix_1a24b3678b5a1b638006fc8fe0fd9cc457" kindref="member">GetElement</ref>(i,j),i,j);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>C;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;std::endl&lt;&lt;</highlight><highlight class="stringliteral">&quot;Error<sp/>:<sp/>The<sp/>matrix<sp/>being<sp/>manipulated<sp/>is<sp/>not<sp/>a<sp/>matrix<sp/>of<sp/>the<sp/>same<sp/>type.&quot;</highlight><highlight class="normal">&lt;&lt;std::endl&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>0x42;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>type&gt;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><ref refid="classmatrix" kindref="compound">matrix&lt;type&gt;</ref><sp/>operator*<sp/>(<ref refid="classmatrix" kindref="compound">matrix&lt;type&gt;</ref><sp/>A,<ref refid="classmatrix" kindref="compound">matrix&lt;type&gt;</ref><sp/>B)</highlight></codeline>
<codeline lineno="223"><highlight class="normal">{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmatrix" kindref="compound">matrix&lt;type&gt;</ref><sp/>C(A.<ref refid="classmatrix_1a1db0593aa62235f24143913564382990" kindref="member">GetRowLength</ref>(),B.<ref refid="classmatrix_1aee9fe31d5065ec906cd0ed908cc127a1" kindref="member">GetColumnLength</ref>());<sp/></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m=0;m&lt;A.<ref refid="classmatrix_1a1db0593aa62235f24143913564382990" kindref="member">GetRowLength</ref>();m++){<sp/><sp/></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s=0;s&lt;B.<ref refid="classmatrix_1aee9fe31d5065ec906cd0ed908cc127a1" kindref="member">GetColumnLength</ref>();s++){<sp/><sp/></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C.<ref refid="classmatrix_1a483f7ab8c7d5aa28495fb5d9a02d369d" kindref="member">PutElement</ref>(0,m,s);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n=0;n&lt;B.<ref refid="classmatrix_1aee9fe31d5065ec906cd0ed908cc127a1" kindref="member">GetColumnLength</ref>();n++){<sp/><sp/></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C.PutElement(C.GetElement(m,s)+A.<ref refid="classmatrix_1a24b3678b5a1b638006fc8fe0fd9cc457" kindref="member">GetElement</ref>(m,n)*B.<ref refid="classmatrix_1a24b3678b5a1b638006fc8fe0fd9cc457" kindref="member">GetElement</ref>(n,s),m,s);<sp/><sp/></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>C;</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>type,</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>p&gt;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><ref refid="classmatrix" kindref="compound">matrix&lt;type&gt;</ref><sp/>operator^<sp/>(<ref refid="classmatrix" kindref="compound">matrix&lt;type&gt;</ref><sp/>A,p<sp/>B)</highlight></codeline>
<codeline lineno="245"><highlight class="normal">{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmatrix" kindref="compound">matrix&lt;type&gt;</ref><sp/>C(A.<ref refid="classmatrix_1a1db0593aa62235f24143913564382990" kindref="member">GetRowLength</ref>(),A.<ref refid="classmatrix_1aee9fe31d5065ec906cd0ed908cc127a1" kindref="member">GetColumnLength</ref>());<sp/></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;B;i++)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m=0;m&lt;A.<ref refid="classmatrix_1a1db0593aa62235f24143913564382990" kindref="member">GetRowLength</ref>();m++){<sp/><sp/></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s=0;s&lt;A.<ref refid="classmatrix_1aee9fe31d5065ec906cd0ed908cc127a1" kindref="member">GetColumnLength</ref>();s++){<sp/><sp/></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C.<ref refid="classmatrix_1a483f7ab8c7d5aa28495fb5d9a02d369d" kindref="member">PutElement</ref>(0,m,s);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n=0;n&lt;A.<ref refid="classmatrix_1aee9fe31d5065ec906cd0ed908cc127a1" kindref="member">GetColumnLength</ref>();n++){<sp/><sp/></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C.PutElement(C.GetElement(m,s)%A.<ref refid="classmatrix_1a047ea31ba5316a00c80d2db118433d6c" kindref="member">ModValue</ref>+A.<ref refid="classmatrix_1a24b3678b5a1b638006fc8fe0fd9cc457" kindref="member">GetElement</ref>(m,n)%A.<ref refid="classmatrix_1a047ea31ba5316a00c80d2db118433d6c" kindref="member">ModValue</ref>*A.<ref refid="classmatrix_1a24b3678b5a1b638006fc8fe0fd9cc457" kindref="member">GetElement</ref>(n,s)%A.<ref refid="classmatrix_1a047ea31ba5316a00c80d2db118433d6c" kindref="member">ModValue</ref>,m,s);<sp/><sp/></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>A=C;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>C;</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="Matrix.h"/>
  </compounddef>
</doxygen>
